name: Build and Upload BoringSSL Wheel to PyPI

on:
  schedule:
    - cron: '0 0 * * 0'  # Runs weekly on Sunday at 00:00 UTC
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.10, 3.11, 3.12]  # Ensure versions are correct
    container:
      image: quay.io/pypa/manylinux_2_34_x86_64

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Use latest version

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - name: Verify Python Version
        run: |
          python --version
          which python

      - name: Install system dependencies
        run: |
          yum install -y cmake gcc gcc-c++ make

      - name: Clone and Build BoringSSL
        run: |
          git clone https://boringssl.googlesource.com/boringssl
          cd boringssl
          mkdir build
          cd build
          cmake -DBUILD_SHARED_LIBS=1 ..
          make
          mkdir -p ../boringssl_binary_build/.libs
          cp ssl/libssl.so ../boringssl_binary_build/.libs/
          cp crypto/libcrypto.so ../boringssl_binary_build/.libs/

      - name: Verify Built Libraries
        run: |
          ls -l boringssl_binary_build/.libs

      - name: Install Python Build Tools
        run: |
          python -m ensurepip
          python -m pip install --upgrade pip setuptools wheel auditwheel

      - name: Generate Dynamic Pre-Release Version
        id: version
        run: |
          DATE=$(date +%Y%m%d%H%M%S)
          VERSION=0.0.1.dev${DATE}
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Update Setup.py with Pre-Release Version
        run: |
          sed -i "s/version='0.0.1'/version='${VERSION}'/" setup.py

      - name: Build Python Wheel
        run: |
          python setup.py bdist_wheel

      - name: Repair Wheel with Auditwheel
        run: |
          auditwheel repair dist/*.whl -w repaired_dist

      - name: Test Built Wheel
        run: |
          python -m pip install repaired_dist/*.whl
          python -c "import boringssl_binary_build; print('Import successful!')"

      - name: Upload Built Wheels to PyPI
        if: success() && github.ref == 'refs/heads/main'
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python -m pip install --upgrade twine
          python -m twine upload repaired_dist/*.whl
