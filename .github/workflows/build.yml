name: Build and Test BoringSSL

on:
  push:
    branches:
      - main

jobs:
  build_bssl:
    runs-on: ubuntu-latest
    steps:
    - name: Install Build Dependencies
      run: |
        sudo apt-get install -y cmake build-essential

    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"

    - name: Install Python Dependencies
      run: pip install build

    - name: Build BoringSSL
      run: |
        git clone https://boringssl.googlesource.com/boringssl
        mkdir -p build
        cd build
        cmake -DBUILD_SHARED_LIBS=1 ../boringssl
        make bssl -j$(nproc)

    - name: Collect libssl.so and Dependencies
      run: |
        cp build/libssl.so bssl_build/
        cp build/libcrypto.so bssl_build/

    - name: Clean Up
      run: |
        rm -fr boringssl
        rm -fr build

    - name: Build Python Wheel
      run: |
        python -m build
        cp dist/*.whl $GITHUB_WORKSPACE/
        rm -fr bssl_build

    - name: Test
      run: |
        ls $GITHUB_WORKSPACE
        pip install $GITHUB_WORKSPACE/bssl_build*.whl


  test_bss_on_python:
    needs: build_bssl
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
            python-version: ${{ matrix.python-version }}

      - name: Install Build Dependencies
        run: |
          ls
          ls $GITHUB_WORKSPACE
      #     python -m pip install --upgrade pip
      #     pip install $GITHUB_WORKSPACE/bssl_build*.whl

      # - name: Test
      #   run: |
      #     python test.py



  #     # - name: Publish to PyPI
  #     #   env:
  #     #     TWINE_USERNAME: __token__
  #     #     TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
  #     #   run: |
  #     #     python -m twine upload dist/*

