name: Build and Test BoringSSL

on:
  push:
    branches:
      - main

jobs:
  build_bss:
    runs-on: ubuntu-latest
    steps:
    - name: Install Build Dependencies
      run: |
        sudo apt-get install -y cmake build-essential

    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"

    - name: Install Python Dependencies
      run: pip install build

    - name: Build BoringSSL
      run: |
        git clone https://boringssl.googlesource.com/boringssl
        mkdir -p build
        cd build
        cmake -DBUILD_SHARED_LIBS=1 ../boringssl
        make bssl -j$(nproc)

    - name: Collect libssl.so and Dependencies
      run: |
        mkdir -p bssl
        cp build/libssl.so boringssl_binary_build/
        cp build/libcrypto.so boringssl_binary_build/


    - name: Build Python Wheel
      run: |
        python -m build
        ls
        ls dist



  # test_bss_on_python:
  #   needs: build_bss
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout Code
  #     uses: actions/checkout@v3

  #   - name: Download BoringSSL Artifacts
  #     uses: actions/download-artifact@v3
  #     with:
  #       name: boringssl
  #       path: boringssl_artifacts/


  #   - name: Set up Python 3.12
  #     uses: actions/setup-python@v4
  #     with:
  #       python-version: "3.12"

  #   - name: Install Build Dependencies
  #     run: |
  #       python -m pip install cffi

  #   - name: Test
  #     run: python test.py --lib-path boringssl_artifacts/libssl.so



  #   # strategy:
  #   #   matrix:
  #   #     python-version: ["3.10", "3.11", "3.12"]

  #   # steps:
  #   #   - name: Checkout Code
  #   #     uses: actions/checkout@v3

  #   #   - name: Set up Python ${{ matrix.python-version }}
  #   #     uses: actions/setup-python@v4
  #   #     with:
  #   #       python-version: ${{ matrix.python-version }}

  #   #   - name: Install Build Dependencies
  #   #     run: |
  #   #       python -m pip install --upgrade pip
  #   #       python -m pip install cffi


  #   #   - name: Test
  #   #     run: python test.py --lib-path boringssl_build/ssl/libssl.so


  # # build_and_publish:
  # #   needs: build_bss
  # #   runs-on: ubuntu-latest

  # #   steps:

  # #     - name: Set up Python 3.12
  # #       uses: actions/setup-python@v4
  # #       with:
  # #         python-version: "3.12"

  # #     - name: Install Build Dependencies
  # #       run: |
  # #         python -m pip install cffi

  # #     - name: Test
  # #       run: python test.py --lib-path boringssl_build/ssl/libssl.so

  #     # - name: Install build dependencies
  #     #   run: |
  #     #     python -m pip install --upgrade pip
  #     #     python -m pip install build twine

  #     # - name: Prepare BoringSSL for Packaging
  #     #   run: |
  #     #     mkdir -p lib/ssl
  #     #     cp boringssl_downloaded/ssl/libssl.so lib/ssl/
  #     #     cp boringssl_downloaded/crypto/libcrypto.so lib/crypto/
  #     #   # Adjust paths as necessary based on your project structure

  #     # - name: Build Wheel
  #     #   run: |
  #     #     python -m build --wheel

  #     # - name: Publish to PyPI
  #     #   env:
  #     #     TWINE_USERNAME: __token__
  #     #     TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
  #     #   run: |
  #     #     python -m twine upload dist/*

