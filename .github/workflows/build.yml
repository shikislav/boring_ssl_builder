name: Build and Test BoringSSL

on:
  push:
    branches:
      - main

jobs:
  build_bssl:
    runs-on: ubuntu-latest
    steps:
    - name: Install Build Dependencies
      run: |
        sudo apt-get install -y cmake build-essential

    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"

    - name: Install Python Dependencies
      run: pip install build

    - name: Build BoringSSL
      run: |
        git clone https://boringssl.googlesource.com/boringssl
        mkdir -p build
        cd build
        cmake -DBUILD_SHARED_LIBS=1 ../boringssl
        make bssl -j$(nproc)

    - name: Collect libssl.so and Dependencies
      run: |
        cp build/libssl.so bssl_build/
        cp build/libcrypto.so bssl_build/

    - name: Clean Up
      run: |
        rm -fr boringssl
        rm -fr build

    - name: Build Python Wheel
      run: |
        python -m build

    - name: Upload Wheel and Test File to Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: bssl_wheel_and_test
        path: |
          dist/bssl_build*.whl
          test.py


  test_bssl_on_python:
        needs: build_bssl
        runs-on: ubuntu-latest

        strategy:
          matrix:
            python-version: ['3.9', "3.10", "3.11", "3.12"]

        steps:
        - name: Setup Python
          uses: actions/setup-python@v4
          with:
              python-version: ${{ matrix.python-version }}

        - name: Download Wheel Artifact
          uses: actions/download-artifact@v3
          with:
            name: bssl_wheel_and_test


        - name: Test Installation
          run: |
            python -m pip install --upgrade pip
            pip install dist/bssl_build*.whl
            python test.py



  publish_to_pypi:
      needs: test_bssl_on_python
      if: ${{ success() }}
      runs-on: ubuntu-latest
      steps:

      - name: Download Wheel Artifact
        uses: actions/download-artifact@v3
        with:
          name: bssl_wheel_and_test

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python -m pip install --upgrade pip twine
          python -m twine upload dist/*.whl
